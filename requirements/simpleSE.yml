# 
# How it works
# ---------------
#
# decomposition is a tree starting from a single requirement and decomposing them into
# multiple requirements, until a requirement can be tranformed into design choice
# 
#  Workflow
# ----------
#  * start from the root requirement and decompose further, example below.
#    supported objects
#     - requrements = a list with separate requirements  
#     - decomposition = rationale on how to split to multiple requirements
#  * separate decomposition trees are separated by `---` separators
#  * extra files can be included with 


# this is the TOP LEVEL requirement, everything should trace back to this one.
text: |
  A user (architect or designer) **needs** to manage requirements of a complex system.
  A good requirement management system has a set of high-level requirements
  
requirements:
  
  - text: tool **must** support requirement workflow
    decomposition: 
      text : typical workflow consists of setting status to 'draft/reviewed/confirmed' or similar
      requirements:
        - text: each requirement **must** have a traceable status
        - text: each requirment **could** have default status, like 'draft'
      
  - text: tool **must** have traceability
  - text: tool **must** have version control
  - text: tool **must** support multiple users
  - text: tool **must** be user-friendly and support "traditional" way of writing requrements.
    decomposition: !include userFriendly.yml
  
